--- Valid schemas -----------------------------
test/valid/edge-all.json passed test
test/valid/edge-loop.json passed test
test/valid/edge-minimal.json passed test
test/valid/event-click.json passed test
test/valid/event-click2.json passed test
test/valid/event-undo.json passed test
test/valid/definitions-minimal.json passed test
test/valid/graph-binary-search-tree.json passed test
test/valid/graph-linkedlist-1directional.json passed test
test/valid/graph-linkedlist-bidirectional.json passed test
test/valid/graph-red-black-tree.json passed test
test/valid/graph-undirected-weighted.json passed test
test/valid/initialState-graph-and-matrix.json passed test
test/valid/initialState-matrix-and-node.json passed test
test/valid/jaal-dijkstra.json passed test
test/valid/jaal-minimal.json passed test
test/valid/keyvalue-simple.json passed test
test/valid/keyvalue-string-matrix.json passed test
test/valid/matrix-1d-horizontal.json passed test
test/valid/matrix-1d-vertical.json passed test
test/valid/matrix-2d.json passed test
test/valid/matrix-all-properties.json passed test
test/valid/metadata-valid.json passed test
test/valid/node-array-of-keyvalues.json passed test
test/valid/node-keyvalue-string-node.json passed test
test/valid/node-keyvalue-string-string.json passed test
test/valid/node-minimal.json passed test
test/valid/node-style.json passed test
--- Invalid schemas -----------------------------
test/invalid/event-click-invalid-id.json passed test
[
  {
    instancePath: '/object',
    schemaPath: '#/properties/object/pattern',
    keyword: 'pattern',
    params: { pattern: '^edge|graph|keyvalue|matrix|node' },
    message: 'must match pattern "^edge|graph|keyvalue|matrix|node"'
  }
]
test/invalid/event-click-invalid-type.json passed test
[
  {
    instancePath: '/type',
    schemaPath: '#/properties/type/pattern',
    keyword: 'pattern',
    params: { pattern: '^click|grade|undo|operation|narration$' },
    message: 'must match pattern "^click|grade|undo|operation|narration$"'
  }
]
test/invalid/event-click-no-object.json passed test
[
  {
    instancePath: '',
    schemaPath: '#/then/required',
    keyword: 'required',
    params: { missingProperty: 'object' },
    message: "must have required property 'object'"
  }
]
test/invalid/event-time-is-negative.json passed test
[
  {
    instancePath: '/time',
    schemaPath: '#/properties/time/minimum',
    keyword: 'minimum',
    params: { comparison: '>=', limit: 0 },
    message: 'must be >= 0'
  }
]
test/invalid/event-time-is-string.json passed test
[
  {
    instancePath: '/time',
    schemaPath: '#/properties/time/type',
    keyword: 'type',
    params: { type: 'integer' },
    message: 'must be integer'
  }
]
test/invalid/edge-1node.json passed test
[
  {
    instancePath: '/node',
    schemaPath: '#/properties/node/minItems',
    keyword: 'minItems',
    params: { limit: 2 },
    message: 'must NOT have fewer than 2 items'
  }
]
test/invalid/edge-3nodes.json passed test
[
  {
    instancePath: '/node',
    schemaPath: '#/properties/node/maxItems',
    keyword: 'maxItems',
    params: { limit: 2 },
    message: 'must NOT have more than 2 items'
  }
]
test/invalid/matrix-no-nested-list.json passed test
[
  {
    instancePath: '/key/0',
    schemaPath: '#/properties/key/items/type',
    keyword: 'type',
    params: { type: 'array' },
    message: 'must be array'
  }
]
test/invalid/metadata-invalid-simulationStart.json passed test
data/simulationStart must match pattern "^[0-9]{4}-[0-9]{2}-[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}.[0-9]{3}Z"
